{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEbD\\\\Final Project\\\\client\\\\src\\\\components\\\\SpotifyArtistList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './SpotifyArtistList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ARTIST_IDS = [\"5FlDRCUWkwAXFZ6ynO0U2P\", \"1Xyo4u8uXC1ZmMpatF05PJ\", \"6eUKZXaKkcviH0Ku9w2n3V\", \"3TVXtAsR1Inumwj472S9r4\", \"2CIMQHirSU0MQqyYHq0eOx\", \"57dN52uHvrHOxijzpIgu3E\", \"1uNFoZAHBGtllmzznpCI3s\", \"66CXWjxzNUsdJxJ2JdwvnR\"];\nconst SpotifyArtistList = () => {\n  _s();\n  const [artists, setArtists] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        const response = await axios.get(`/api/spotify/artists?ids=${ARTIST_IDS.join(',')}`);\n        setArtists(response.data);\n      } catch (err) {\n        setError('Failed to load artists');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchArtists();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"artist-message\",\n    children: \"Loading artists...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"artist-message\",\n    style: {\n      color: 'red'\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"artist-title\",\n      children: \"\\uD83C\\uDFA4 Featured Spotify Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-grid\",\n      children: artists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-card\",\n        children: [artist.images[0] && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.images[0].url,\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"artist-name\",\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artist-genres\",\n          children: artist.genres.length > 0 ? artist.genres.join(', ') : 'Unknown genres'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artist-popularity\",\n          children: [\"\\uD83D\\uDD25 \", artist.popularity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: artist.external_urls.spotify,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"artist-link\",\n          children: \"View on Spotify \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, artist.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyArtistList, \"paO0Y0tEmLv5Neyxpqj/xTEm6z8=\");\n_c = SpotifyArtistList;\nexport default SpotifyArtistList;\nvar _c;\n$RefreshReg$(_c, \"SpotifyArtistList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ARTIST_IDS","SpotifyArtistList","_s","artists","setArtists","loading","setLoading","error","setError","fetchArtists","response","get","join","data","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","artist","images","src","url","alt","name","genres","length","popularity","href","external_urls","spotify","target","rel","id","_c","$RefreshReg$"],"sources":["D:/WEbD/Final Project/client/src/components/SpotifyArtistList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './SpotifyArtistList.css';\r\n\r\nconst ARTIST_IDS = [\r\n  \"5FlDRCUWkwAXFZ6ynO0U2P\",\r\n  \"1Xyo4u8uXC1ZmMpatF05PJ\",\r\n  \"6eUKZXaKkcviH0Ku9w2n3V\",\r\n  \"3TVXtAsR1Inumwj472S9r4\",\r\n  \"2CIMQHirSU0MQqyYHq0eOx\",\r\n  \"57dN52uHvrHOxijzpIgu3E\",\r\n  \"1uNFoZAHBGtllmzznpCI3s\",\r\n  \"66CXWjxzNUsdJxJ2JdwvnR\",\r\n  \r\n];\r\n\r\nconst SpotifyArtistList = () => {\r\n  const [artists, setArtists] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchArtists = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `/api/spotify/artists?ids=${ARTIST_IDS.join(',')}`\r\n        );\r\n        setArtists(response.data);\r\n      } catch (err) {\r\n        \r\n        setError('Failed to load artists');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchArtists();\r\n  }, []);\r\n\r\n  if (loading) return <p className=\"artist-message\">Loading artists...</p>;\r\n  if (error) return <p className=\"artist-message\" style={{ color: 'red' }}>{error}</p>;\r\n\r\n  return (\r\n    <div className=\"artist-container\">\r\n      <h2 className=\"artist-title\">ðŸŽ¤ Featured Spotify Artists</h2>\r\n      <div className=\"artist-grid\">\r\n        {artists.map((artist) => (\r\n          <div key={artist.id} className=\"artist-card\">\r\n            {artist.images[0] && (\r\n              <img\r\n                src={artist.images[0].url}\r\n                alt={artist.name}\r\n              />\r\n            )}\r\n            <h3 className=\"artist-name\">{artist.name}</h3>\r\n            <p className=\"artist-genres\">\r\n              {artist.genres.length > 0 ? artist.genres.join(', ') : 'Unknown genres'}\r\n            </p>\r\n            <p className=\"artist-popularity\">ðŸ”¥ {artist.popularity}</p>\r\n            <a\r\n              href={artist.external_urls.spotify}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"artist-link\"\r\n            >\r\n              View on Spotify â†’\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpotifyArtistList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}